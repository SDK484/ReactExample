{"version":3,"sources":["Atm/AtmLogin.js","Atm/AtmWithdraw.js","AppRoutes/AppRoutes.js","App.js","serviceWorker.js","index.js"],"names":["AtmLogin","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","pin","error","handleChange","bind","assertThisInitialized","requestData","event","target","setState","value","_this2","data","axios","method","url","then","response","console","log","history","push","pathname","routes","atmWithdraw","detail","catch","_this3","_this$state","react_default","a","createElement","Card_default","className","Header","Body","Title","Form_default","Group","controlId","Control","id","type","onChange","e","Button_default","variant","onClick","Footer","React","Component","AtmWithdraw","curBalance","request","overdraw","cash","notes","fiveNotes","tenNotes","twenNotes","machineTotal","handleRequest","undefined","location","currentBalance","newCurBal","newMacTot","contBool","res","getRemainder","_this$state2","Text","InputGroup_default","Prepend","FormControl_default","aria-label","Append","atmLogin","AppRoutes","react_router","path","component","App","react_router_dom","AppRoutes_AppRoutes","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5b64a8d8.chunk.js","sourcesContent":["import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { routes } from '../AppRoutes/AppRoutes';\r\nimport axios from 'axios';\r\nimport './AtmStyles.css';\r\n\r\nclass AtmLogin extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tpin: '',\r\n\t\t\terror: false\r\n\t\t};\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.requestData = this.requestData.bind(this);\r\n\t}\r\n\t\r\n\thandleChange(event) {\r\n\t\t// set pin\r\n\t\tconst target = event.target;\r\n\t\tthis.setState({ pin: target.value });\r\n\t}\r\n\t\r\n\trequestData() {\r\n\t\t// local vars\r\n\t\tconst pin = this.state.pin;\r\n\t\tconst data = { \"pin\": pin };\r\n\t\tconst url = 'https://frontend-challenge.screencloud-michael.now.sh/api/pin/';\r\n\t\t// server request\r\n\t\taxios({\r\n\t\t\tmethod: 'POST',\r\n\t\t\turl: url,\r\n\t\t\tdata: data\r\n\t\t}).then(response => {\r\n\t\t\t// get response\r\n\t\t\tconsole.log(response.data);\r\n\t\t\t// not needed\r\n\t\t\tthis.setState({ error: false });\r\n\t\t\t// send data as prop and\r\n\t\t\t// open new link to withdraw page\r\n\t\t\tthis.props.history.push({\r\n\t\t\t\tpathname: routes.atmWithdraw,\r\n\t\t\t\tstate: { detail: response.data }\r\n\t\t\t})\r\n\t\t}).catch(error => {\r\n\t\t\t// handle error\r\n\t\t\tconsole.log(error);\r\n\t\t\tthis.setState({ error: true });\r\n\t\t});\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst { pin, error } = this.state;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<Card className=\"CardLogin\">\r\n\t\t\t\t<Card.Header>ATM Login</Card.Header>\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Card.Title>Please provide your PIN</Card.Title>\r\n\t\t\t\t\t<Form.Group controlId=\"formGroupPassword\">\r\n\t\t\t\t\t\t<Form.Control id=\"passwordInput\" type=\"password\" onChange={(e) => this.handleChange(e)} value={pin} />\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t{error && <p className=\"Alert\">Incorrect pin - please try again!</p>}\r\n\t\t\t\t\t<Button variant=\"primary\" onClick={() => this.requestData()}>Enter</Button>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t\t<Card.Footer className=\"text-muted\"></Card.Footer>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AtmLogin;","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport './AtmStyles.css';\r\n\r\nclass AtmWithdraw extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcurBalance: 100,\r\n\t\t\trequest: 0,\r\n\t\t\toverdraw: false,\r\n\t\t\tcash: false,\r\n\t\t\tnotes: false,\r\n\t\t\tfiveNotes: 4,\r\n\t\t\ttenNotes: 15,\r\n\t\t\ttwenNotes: 7,\r\n\t\t\tmachineTotal: 310\r\n\t\t};\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleRequest = this.handleRequest.bind(this);\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\t// check if login was successful\r\n\t\t// if not then Â£100 is set as standard\r\n\t\tif(this.props.location.state !== undefined) {\r\n\t\t\tthis.setState({ curBalance: this.props.location.state.detail.currentBalance });\r\n\t\t}\r\n\t}\r\n\t\r\n\thandleChange(event) {\r\n\t\t// get request entry\r\n\t\tconst target = event.target;\r\n\t\tthis.setState({ request: target.value });\r\n\t}\r\n\t\r\n\thandleRequest() {\r\n\t\t// local vars\r\n\t\tconst { curBalance, machineTotal, fiveNotes,\r\n\t\t\ttenNotes, twenNotes } = this.state;\r\n\t\tlet request = this.state.request;\r\n\t\tconst newCurBal = curBalance-request;\r\n\t\tconst newMacTot = machineTotal-request;\r\n\t\tlet contBool = false;\r\n\t\t\r\n\t\t// dispense notes\r\n\t\t// 20 notes\r\n\t\tif (request >= 20) {\r\n\t\t\tif (twenNotes > 0) {\r\n\t\t\t\tif (request % 20 === 0) {\r\n\t\t\t\t\tlet res = request / 20;\r\n\t\t\t\t\trequest = 0;\r\n\t\t\t\t\tthis.setState({ twenNotes: twenNotes-res });\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// find the remainder amount\r\n\t\t\t\t\tlet getRemainder = request % 20;\r\n\t\t\t\t\t// remove remaninder amount\r\n\t\t\t\t\trequest = request - getRemainder;\r\n\t\t\t\t\t// get 20 notes\r\n\t\t\t\t\tlet res = request / 20;\r\n\t\t\t\t\t// leave back in remainder amount\r\n\t\t\t\t\trequest = getRemainder;\r\n\t\t\t\t\tthis.setState({ twenNotes: twenNotes-res });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 10 notes\r\n\t\tif (request >= 10) {\r\n\t\t\tif (tenNotes > 0) {\r\n\t\t\t\tif (request % 10 === 0) {\r\n\t\t\t\t\tlet res = request / 10;\r\n\t\t\t\t\trequest = 0;\r\n\t\t\t\t\tthis.setState({ tenNotes: tenNotes-res });\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// find the remainder amount\r\n\t\t\t\t\tlet getRemainder = request % 10;\r\n\t\t\t\t\t// remove remaninder amount\r\n\t\t\t\t\trequest = request - getRemainder;\r\n\t\t\t\t\t// get 10 notes\r\n\t\t\t\t\tlet res = request / 10;\r\n\t\t\t\t\t// leave back in remainder amount\r\n\t\t\t\t\trequest = getRemainder;\r\n\t\t\t\t\tthis.setState({ tenNotes: tenNotes-res });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 5 notes\r\n\t\tif (request >= 5) {\r\n\t\t\tif (fiveNotes > 0) {\r\n\t\t\t\tif (request % 5 === 0) {\r\n\t\t\t\t\tlet res = request / 5;\r\n\t\t\t\t\trequest = 0;\r\n\t\t\t\t\tthis.setState({ fiveNotes: fiveNotes-res });\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// find the remainder amount\r\n\t\t\t\t\tlet getRemainder = request % 5;\r\n\t\t\t\t\t// remove remaninder amount\r\n\t\t\t\t\trequest = request - getRemainder;\r\n\t\t\t\t\t// get 5 notes\r\n\t\t\t\t\tlet res = request / 5;\r\n\t\t\t\t\t// leave back in remainder amount\r\n\t\t\t\t\trequest = getRemainder;\r\n\t\t\t\t\tthis.setState({ fiveNotes: fiveNotes-res });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// check request is done\r\n\t\tif (request > 0) {\r\n\t\t\tthis.setState({ notes: true });\r\n\t\t\tcontBool = false;\r\n\t\t} else {\r\n\t\t\tthis.setState({ notes: false });\r\n\t\t\tcontBool = true;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t// adjust machine total\r\n\t\tif (contBool) {\t\t\r\n\t\t\tif (newMacTot < 0) {\r\n\t\t\t\tthis.setState({ cash: true });\r\n\t\t\t\tcontBool = false;\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({ machineTotal: newMacTot });\r\n\t\t\t\tthis.setState({ cash: false });\r\n\t\t\t\tcontBool = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// check for cash in machine\r\n\t\tif (contBool) {\r\n\t\t\t// overdraft limit\r\n\t\t\tif (newCurBal >= -100) {\r\n\t\t\t\tthis.setState({ curBalance: newCurBal });\r\n\t\t\t\tthis.setState({ overdraw: false });\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({ overdraw: true });\r\n\t\t\t}\t\r\n\t\t}\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst { curBalance, request, overdraw, cash, notes, \r\n\t\t\tfiveNotes, tenNotes, twenNotes, machineTotal } = this.state;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<Card className=\"CardWithdraw\">\r\n\t\t\t\t<Card.Header>ATM Withdraw</Card.Header>\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Card.Title>Bank Statement</Card.Title>\r\n\t\t\t\t\t<Card.Text id=\"currentBalance\">\r\n\t\t\t\t\t\tCurrent Statement: { curBalance }\r\n\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t<hr/>\r\n\t\t\t\t\t<Card.Title>Withdraw</Card.Title>\r\n\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t<InputGroup.Text>Â£</InputGroup.Text>\r\n\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t<FormControl id=\"entryRequest\" aria-label=\"Amount (to the nearest pound)\" \r\n\t\t\t\t\t\t\tonChange={(e) => this.handleChange(e)} value={request} />\r\n\t\t\t\t\t\t<InputGroup.Append>\r\n\t\t\t\t\t\t\t<InputGroup.Text>.00</InputGroup.Text>\r\n\t\t\t\t\t\t</InputGroup.Append>\r\n\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t{cash && <p className=\"Alert\">No more cash withdrawals can be made!</p>}\r\n\t\t\t\t\t{overdraw && <p className=\"Alert\">You have reached the withdrawal limit!</p>}\r\n\t\t\t\t\t{notes && <p className=\"Alert\">Incorrect notes available!</p>}\r\n\t\t\t\t\t<Button variant=\"primary\" onClick={() => this.handleRequest()}>Request</Button>\r\n\t\t\t\t\t<hr/>\r\n\t\t\t\t\t<Card.Title>Current Notes in Machine</Card.Title>\r\n\t\t\t\t\t<Card.Text>5 Notes: x{ fiveNotes }</Card.Text>\r\n\t\t\t\t\t<Card.Text>10 Notes: x{ tenNotes }</Card.Text>\r\n\t\t\t\t\t<Card.Text>20 Notes: x{ twenNotes }</Card.Text>\r\n\t\t\t\t\t<Card.Text id=\"machineTotal\">Total: Â£{ machineTotal }</Card.Text>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t\t<Card.Footer className=\"text-muted\"></Card.Footer>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AtmWithdraw;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport AtmLogin from '../Atm/AtmLogin';\r\nimport AtmWithdraw from '../Atm/AtmWithdraw';\r\n\r\nconst routes = {\r\n\tatmLogin: '/atmLogin',\r\n\tatmWithdraw: '/atmWithdraw'\r\n};\r\n\r\nfunction AppRoutes() {\r\n\treturn(\r\n\t\t<Switch>\r\n\t\t\t<Route path={routes.atmLogin} component={AtmLogin} />\r\n\t\t\t<Route path={routes.atmWithdraw} component={AtmWithdraw} />\r\n\t\t</Switch>\r\n\t);\r\n}\r\n\r\nexport { routes };\r\nexport default AppRoutes;","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport AppRoutes from './AppRoutes/AppRoutes';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\t\t\t<Router>\n\t\t\t\t<main>\n\t\t\t\t\t<AppRoutes />\n\t\t\t\t</main>\n\t\t\t</Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}